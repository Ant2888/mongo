---
- hosts: configdb[0]
  remote_user: "{{ ansible_user }}"
  vars:
    ansible_python_interpreter: '/usr/bin/python3'
    configdb: 3
    base_port: 28002
    config_repl: "perf_test"
    id: "_id: '{{ config_repl }}'"
    member_item: "{ _id : ID_VAL, host: '0.0.0.0:PORT' }"
    members: "members: [{% for _ind in range(configdb) %}{{ member_item | replace('ID_VAL', _ind) | replace('PORT', base_port+_ind) }},{% endfor %}]"
    rsinit: "rs.initiate({% raw %}{{% endraw %} {{id}}, configsvr: true, {{members}} {% raw %}}{% endraw %});"
    cmd_temp: 'mongod --config /data/configdb.conf --port PORT --dbpath /data/cfgNUM --fork --logpath /data/mongod.log'
    shell_command: '{% for _ind in range(configdb) %}{{ cmd_temp | replace("PORT", base_port+_ind) | replace("NUM", _ind+1) }} && {% endfor %}:'
  tasks:
    - name: Copying over config
      copy:
        src: configdb.conf
        dest: /data/configdb.conf
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Creating non-existing dirs
      file:
        path: "{{ item }}"
        state: directory
        mode: 0777
        group: "{{ ansible_user }}"
        owner: "{{ ansible_user }}"
      with_items:
      - ["/data/cfg1", "/data/cfg2", "/data/cfg3"]

    - name: Starting each config server
      shell: bash -lc "{{ shell_command }}"

    - debug:
        msg: "Shell command: {{ shell_command }} \n RSINIT: {{ rsinit }}"

    - name: Designating repl set master
      shell: mongo --host localhost --port {{ base_port }} --eval "{{ rsinit }}"
